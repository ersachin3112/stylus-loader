// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`loader correctly compiles mixin calls inside imported files: css 1`] = `
"body {
  color: #639;
}
.rule {
  color: #639;
}
main {
  color: #639;
}
"
`;

exports[`loader correctly compiles mixin calls inside imported files: errors 1`] = `[]`;

exports[`loader correctly compiles mixin calls inside imported files: warnings 1`] = `[]`;

exports[`loader imports and paths deps: css 1`] = `
".other {
  font-family: serif;
}
"
`;

exports[`loader imports and paths deps: errors 1`] = `[]`;

exports[`loader imports and paths deps: warnings 1`] = `[]`;

exports[`loader imports and webpack alias: css 1`] = `
".webpack-alias-1 {
  color: #f00;
}
.webpack-alias-2 {
  color: #ff7f50;
}
"
`;

exports[`loader imports and webpack alias: errors 1`] = `[]`;

exports[`loader imports and webpack alias: warnings 1`] = `[]`;

exports[`loader imports and webpack deps: css 1`] = `
".imported-in-web-modules {
  font-size: 2em;
}
.imported-in-web-modules {
  font-size: 2em;
}
"
`;

exports[`loader imports and webpack deps: errors 1`] = `[]`;

exports[`loader imports and webpack deps: warnings 1`] = `[]`;

exports[`loader imports files in dir like a glob: css 1`] = `
".like-a-glob {
  color: #ff7f50;
}
.entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files in dir like a glob: errors 1`] = `[]`;

exports[`loader imports files in dir like a glob: warnings 1`] = `[]`;

exports[`loader imports files listed in glob **/* with deps: css 1`] = `
".a-deep {
  color: #f00;
}
.sub-deep {
  color: #f00;
}
.a-all-glob {
  color: #f00;
}
.a-all {
  color: #f00;
}
.b-all-glob {
  color: #f00;
}
"
`;

exports[`loader imports files listed in glob **/* with deps: errors 1`] = `[]`;

exports[`loader imports files listed in glob **/* with deps: warnings 1`] = `[]`;

exports[`loader imports files listed in glob import package through webpack: css 1`] = `
".glob-in-node {
  color: #fff;
}
.glob-in-node {
  background: #ff7f50;
}
.index-glob {
  font-size: 1rem;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in glob import package through webpack: errors 1`] = `[]`;

exports[`loader imports files listed in glob import package through webpack: warnings 1`] = `[]`;

exports[`loader imports files listed in glob import package: css 1`] = `
".glob-in-node {
  color: #fff;
}
.glob-in-node {
  background: #ff7f50;
}
.index-glob {
  font-size: 1rem;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in glob import package: errors 1`] = `[]`;

exports[`loader imports files listed in glob import package: warnings 1`] = `[]`;

exports[`loader imports files listed in glob with deps: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-files {
  color: #000;
}
.b-glob-files {
  background: #808080;
}
.imported-stylus {
  border: 5px;
}
"
`;

exports[`loader imports files listed in glob with deps: errors 1`] = `[]`;

exports[`loader imports files listed in glob with deps: warnings 1`] = `[]`;

exports[`loader imports files listed in glob with webpack import 2: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in glob with webpack import 2: errors 1`] = `[]`;

exports[`loader imports files listed in glob with webpack import 2: warnings 1`] = `[]`;

exports[`loader imports files listed in glob with webpack import with deps: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.glob-in-node {
  color: #fff;
}
.glob-in-node {
  background: #ff7f50;
}
.index-glob {
  font-size: 1rem;
}
.a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in glob with webpack import with deps: errors 1`] = `[]`;

exports[`loader imports files listed in glob with webpack import with deps: warnings 1`] = `[]`;

exports[`loader imports files listed in nested glob import: css 1`] = `
".a-nested-glob {
  color: #f00;
}
.b-nested-glob {
  color: #f00;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in nested glob import: errors 1`] = `[]`;

exports[`loader imports files listed in nested glob import: warnings 1`] = `[]`;

exports[`loader imports files listed in nested glob with webpack import: css 1`] = `
".a-nested-glob {
  color: #f00;
}
.b-nested-glob {
  color: #f00;
}
.glob-entry {
  box-sizing: border-box;
}
"
`;

exports[`loader imports files listed in nested glob with webpack import: errors 1`] = `[]`;

exports[`loader imports files listed in nested glob with webpack import: warnings 1`] = `[]`;

exports[`loader imports files listed in option "style" package.json: css 1`] = `
".imported-fake-stylus {
  color: #000;
}
"
`;

exports[`loader imports files listed in option "style" package.json: errors 1`] = `[]`;

exports[`loader imports files listed in option "style" package.json: warnings 1`] = `[]`;

exports[`loader imports files listed in option argument and deps: css 1`] = `
".imported-stylus {
  border: 5px;
}
body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader imports files listed in option argument and deps: errors 1`] = `[]`;

exports[`loader imports files listed in option argument and deps: warnings 1`] = `[]`;

exports[`loader imports files listed in option argument stylus paths style: css 1`] = `
".other {
  font-family: serif;
}
.imported-stylus {
  border: 5px;
}
"
`;

exports[`loader imports files listed in option argument stylus paths style: errors 1`] = `[]`;

exports[`loader imports files listed in option argument stylus paths style: warnings 1`] = `[]`;

exports[`loader imports files listed in option argument webpack style: css 1`] = `
".not-real-nib {
  color: #000;
}
.imported-stylus {
  border: 5px;
}
"
`;

exports[`loader imports files listed in option argument webpack style: errors 1`] = `[]`;

exports[`loader imports files listed in option argument webpack style: warnings 1`] = `[]`;

exports[`loader imports files listed in option argument with tilde: css 1`] = `
".not-real-nib {
  color: #000;
}
.imported-stylus {
  border: 5px;
}
"
`;

exports[`loader imports files listed in option argument with tilde: errors 1`] = `[]`;

exports[`loader imports files listed in option argument with tilde: warnings 1`] = `[]`;

exports[`loader imports files listed in option as glob with webpack import: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
"
`;

exports[`loader imports files listed in option as glob with webpack import: errors 1`] = `[]`;

exports[`loader imports files listed in option as glob with webpack import: warnings 1`] = `[]`;

exports[`loader imports files listed in option as glob: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader imports files listed in option as glob: errors 1`] = `[]`;

exports[`loader imports files listed in option as glob: warnings 1`] = `[]`;

exports[`loader imports files listed in options with nested glob import: css 1`] = `
".a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.glob-in-node {
  color: #fff;
}
.glob-in-node {
  background: #ff7f50;
}
.index-glob {
  font-size: 1rem;
}
.a-glob {
  color: #000;
}
.b-glob {
  background: #808080;
}
.a-glob-webpack {
  color: #000;
}
.b-glob-webpack {
  background: #808080;
}
.glob-entry {
  box-sizing: border-box;
}
body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader imports files listed in options with nested glob import: errors 1`] = `[]`;

exports[`loader imports files listed in options with nested glob import: warnings 1`] = `[]`;

exports[`loader imports files with special characters listed in glob: css 1`] = `
".directoryfile {
  color: #f00;
}
.nestedfile {
  color: #f00;
}
"
`;

exports[`loader imports files with special characters listed in glob: errors 1`] = `[]`;

exports[`loader imports files with special characters listed in glob: warnings 1`] = `[]`;

exports[`loader imports in option "import" and webpack alias: css 1`] = `
".webpack-alias-1 {
  color: #f00;
}
.webpack-alias-2 {
  color: #ff7f50;
}
body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader imports in option "import" and webpack alias: errors 1`] = `[]`;

exports[`loader imports in option "import" and webpack alias: warnings 1`] = `[]`;

exports[`loader imports the right file based on context: css 1`] = `
".a-color {
  color: #aaa;
}
.c-color {
  color: #ccc;
}
.b-color {
  color: #bbb;
}
.c-color {
  color: #ccc;
}
.c-color {
  color: #ccc;
}
.c-color {
  color: #ccc;
}
"
`;

exports[`loader imports the right file based on context: errors 1`] = `[]`;

exports[`loader imports the right file based on context: warnings 1`] = `[]`;

exports[`loader imports unsupported webpack: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: failed to locate @import file ~**/*.styl",
]
`;

exports[`loader imports unsupported webpack: warnings 1`] = `[]`;

exports[`loader in a nested import load module from node_modules: css 1`] = `
".not-real-nib {
  color: #000;
}
"
`;

exports[`loader in a nested import load module from node_modules: errors 1`] = `[]`;

exports[`loader in a nested import load module from node_modules: warnings 1`] = `[]`;

exports[`loader in a nested import load module from paths: css 1`] = `
".other {
  font-family: serif;
}
"
`;

exports[`loader in a nested import load module from paths: errors 1`] = `[]`;

exports[`loader in a nested import load module from paths: warnings 1`] = `[]`;

exports[`loader in a nested import load module from webpack: css 1`] = `
".imported-in-web-modules {
  font-size: 2em;
}
"
`;

exports[`loader in a nested import load module from webpack: errors 1`] = `[]`;

exports[`loader in a nested import load module from webpack: warnings 1`] = `[]`;

exports[`loader in a nested import specified in options: css 1`] = `
".imported-in-web-modules {
  font-size: 2em;
}
body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader in a nested import specified in options: errors 1`] = `[]`;

exports[`loader in a nested import specified in options: warnings 1`] = `[]`;

exports[`loader resolve prefer-relative with webpack: css 1`] = `
".relative {
  color: #ff7f50;
}
"
`;

exports[`loader resolve prefer-relative with webpack: errors 1`] = `[]`;

exports[`loader resolve prefer-relative with webpack: warnings 1`] = `[]`;

exports[`loader resolve with webpack if stylus can't find it: css 1`] = `
".imported-in-web-modules {
  font-size: 2em;
}
.imported-in-web-modules {
  font-size: 2em;
}
"
`;

exports[`loader resolve with webpack if stylus can't find it: errors 1`] = `[]`;

exports[`loader resolve with webpack if stylus can't find it: warnings 1`] = `[]`;

exports[`loader resolves broken css with webpack but does not import it: css 1`] = `
"@import "css-keyframe.css";
"
`;

exports[`loader resolves broken css with webpack but does not import it: errors 1`] = `[]`;

exports[`loader resolves broken css with webpack but does not import it: warnings 1`] = `[]`;

exports[`loader resolves css with webpack but does not import it: css 1`] = `
"@import "css.css";
"
`;

exports[`loader resolves css with webpack but does not import it: errors 1`] = `[]`;

exports[`loader resolves css with webpack but does not import it: warnings 1`] = `[]`;

exports[`loader should compile an @import URL through the CSS loader: css 1`] = `
"@import url("http://fonts.googleapis.com/css?family=Open+Sans:400,700,400italic");
"
`;

exports[`loader should compile an @import URL through the CSS loader: errors 1`] = `[]`;

exports[`loader should compile an @import URL through the CSS loader: warnings 1`] = `[]`;

exports[`loader should emit error when empty import: css 1`] = `
"@import '';
.empty-import {
  color: #f00;
}
"
`;

exports[`loader should emit error when empty import: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: @import string expected",
]
`;

exports[`loader should emit error when empty import: warnings 1`] = `[]`;

exports[`loader should emit error when import loop: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: import loop has been found",
]
`;

exports[`loader should emit error when import loop: warnings 1`] = `[]`;

exports[`loader should emit error when import self: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: import loop has been found",
]
`;

exports[`loader should emit error when import self: warnings 1`] = `[]`;

exports[`loader should emit error when imports files listed as glob in empty directory: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: failed to locate @import file empty-dir/*.styl",
]
`;

exports[`loader should emit error when imports files listed as glob in empty directory: warnings 1`] = `[]`;

exports[`loader should emit error when parse error: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
/test/fixtures/parse-error.styl:3:1",
  "ModuleError: Module Error (from \`replaced original path\`):
expected "indent", got "eos"",
]
`;

exports[`loader should emit error when parse error: warnings 1`] = `[]`;

exports[`loader should emit error when unresolved import glob: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: failed to locate @import file unresolve/*.styl",
]
`;

exports[`loader should emit error when unresolved import glob: warnings 1`] = `[]`;

exports[`loader should emit error when unresolved import: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: failed to locate @import file unresolve.styl",
]
`;

exports[`loader should emit error when unresolved import: warnings 1`] = `[]`;

exports[`loader should emit warning when use unresolved plugin: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Failed to load "unresolved" Stylus plugin. Are you sure it's installed?",
]
`;

exports[`loader should emit warning when use unresolved plugin: warnings 1`] = `[]`;

exports[`loader should import css: css 1`] = `
".imported-css {
  border: 5px;
}
"
`;

exports[`loader should import css: errors 1`] = `[]`;

exports[`loader should import css: warnings 1`] = `[]`;

exports[`loader should import stylus from process.cwd: css 1`] = `
".cwd {
  color: #f00;
}
"
`;

exports[`loader should import stylus from process.cwd: errors 1`] = `[]`;

exports[`loader should import stylus from process.cwd: warnings 1`] = `[]`;

exports[`loader should import stylus: css 1`] = `
".imported-stylus {
  border: 5px;
}
"
`;

exports[`loader should import stylus: errors 1`] = `[]`;

exports[`loader should import stylus: warnings 1`] = `[]`;

exports[`loader should throw an error on circular imports: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: import loop has been found",
]
`;

exports[`loader should throw an error on circular imports: warnings 1`] = `[]`;

exports[`loader should throw an error: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
/test/fixtures/broken.styl:1:8",
  "ModuleError: Module Error (from \`replaced original path\`):
expected "indent", got ";"",
]
`;

exports[`loader should throw an error: warnings 1`] = `[]`;

exports[`loader should use .json file: css 1`] = `
"@media screen and (min-width: 1px) and (max-width: 400px) {
  body {
    display: none;
    color: #a27400;
    background-color: #a27400;
    border-color: rgba(255,202,69,0.5);
    outline-color: #400040;
    padding: 0;
    outline: 0;
    margin: 20px;
    border: #f00;
    text-decoration-color: rgba(0,0,0,0.5);
    text-shadow: 0 1px rgba(0,0,0,0.5);
  }
}
@media screen and (min-width: 1501px) {
  body {
    -webkit-transition: width 1s ease-out;
  }
}
body {
  display: none;
  color: #a27400;
  background-color: #a27400;
  border-color: rgba(255,202,69,0.5);
  outline-color: #400040;
  padding: 0;
  outline: 0;
  margin: 20px;
  -webkit-transition: width 1s ease-out;
  border: #f00;
}
"
`;

exports[`loader should use .json file: errors 1`] = `[]`;

exports[`loader should use .json file: warnings 1`] = `[]`;

exports[`loader should work "compress" option: css 1`] = `"body{font:12px Helvetica,Arial,sans-serif}a.button{-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}"`;

exports[`loader should work "compress" option: errors 1`] = `[]`;

exports[`loader should work "compress" option: warnings 1`] = `[]`;

exports[`loader should work "define" option with raw: css 1`] = `
"section.current-stylus-support {
  raw: "hash property access must use brackets";
  raw: "hash property access must be last in selector :/";
  answer: 42;
}
ul.frisbee-golf {
  list-style: disc;
}
section.type-checks {
  castedType: 'object';
  rawType: 'object';
  answer: 42;
  hooray: "mixins can work around limits";
}
"
`;

exports[`loader should work "define" option with raw: errors 1`] = `[]`;

exports[`loader should work "define" option with raw: warnings 1`] = `[]`;

exports[`loader should work "define" option: css 1`] = `
"body {
  width: 100%;
}
"
`;

exports[`loader should work "define" option: errors 1`] = `[]`;

exports[`loader should work "define" option: warnings 1`] = `[]`;

exports[`loader should work "hoistAtrules" option: css 1`] = `
"@charset 'utf-8';
body {
  color: #f00;
}
"
`;

exports[`loader should work "hoistAtrules" option: errors 1`] = `[]`;

exports[`loader should work "hoistAtrules" option: warnings 1`] = `[]`;

exports[`loader should work "include" option: css 1`] = `
".other {
  font-family: serif;
}
.include-stylus {
  border: 5px;
}
"
`;

exports[`loader should work "include" option: errors 1`] = `[]`;

exports[`loader should work "include" option: warnings 1`] = `[]`;

exports[`loader should work "lineNumbers" option: errors 1`] = `[]`;

exports[`loader should work "lineNumbers" option: warnings 1`] = `[]`;

exports[`loader should work "nib": css 1`] = `
"body {
  background: -webkit-linear-gradient(top, #fff, #000);
  background: -moz-linear-gradient(top, #fff, #000);
  background: -o-linear-gradient(top, #fff, #000);
  background: -ms-linear-gradient(top, #fff, #000);
  background: linear-gradient(to bottom, #fff, #000);
}
#back-to-top {
  position: fixed;
  bottom: 0;
  right: 0;
}
"
`;

exports[`loader should work "nib": errors 1`] = `[]`;

exports[`loader should work "nib": warnings 1`] = `[]`;

exports[`loader should work "prefix" option: css 1`] = `
".prefix-foo {
  border: 5px;
}
.prefix-baz {
  border: 15px;
}
.prefix-bar {
  border: 25px;
}
"
`;

exports[`loader should work "prefix" option: errors 1`] = `[]`;

exports[`loader should work "prefix" option: warnings 1`] = `[]`;

exports[`loader should work "use" option #1: css 1`] = `
"body {
  width: 100%;
}
"
`;

exports[`loader should work "use" option #1: errors 1`] = `[]`;

exports[`loader should work "use" option #1: warnings 1`] = `[]`;

exports[`loader should work "use" option as Array<string>: css 1`] = `
"body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader should work "use" option as Array<string>: errors 1`] = `[]`;

exports[`loader should work "use" option as Array<string>: warnings 1`] = `[]`;

exports[`loader should work "use" option as string: css 1`] = `
"body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader should work "use" option as string: errors 1`] = `[]`;

exports[`loader should work "use" option as string: warnings 1`] = `[]`;

exports[`loader should work "use" option: css 1`] = `
"body {
  width: 100%;
}
"
`;

exports[`loader should work "use" option: errors 1`] = `[]`;

exports[`loader should work "use" option: warnings 1`] = `[]`;

exports[`loader should work and don't override loader options: css 1`] = `
"body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2ljLnN0eWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS0E7RUFDRSxNQUFtQixrQ0FBbkI7O0FBRUY7RUFQRSx1QkFBc0IsSUFBdEI7RUFDQSxvQkFBbUIsSUFBbkI7RUFDQSxlQUFjLElBQWQiLCJmaWxlIjoiYmFzaWMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9yZGVyLXJhZGl1cygpXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1cyBhcmd1bWVudHNcbiAgLW1vei1ib3JkZXItcmFkaXVzIGFyZ3VtZW50c1xuICBib3JkZXItcmFkaXVzIGFyZ3VtZW50c1xuXG5ib2R5XG4gIGZvbnQgMTJweCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmXG5cbmEuYnV0dG9uXG4gIGJvcmRlci1yYWRpdXMgNXB4Il19 */"
`;

exports[`loader should work and don't override loader options: errors 1`] = `[]`;

exports[`loader should work and don't override loader options: warnings 1`] = `[]`;

exports[`loader should work and respect the "compress" option with the "false" value: css 1`] = `
"body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader should work and respect the "compress" option with the "false" value: errors 1`] = `[]`;

exports[`loader should work and respect the "compress" option with the "false" value: warnings 1`] = `[]`;

exports[`loader should work and respect the "compress" option with the "true" value: css 1`] = `"body{font:12px Helvetica,Arial,sans-serif}a.button{-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}"`;

exports[`loader should work and respect the "compress" option with the "true" value: errors 1`] = `[]`;

exports[`loader should work and respect the "compress" option with the "true" value: warnings 1`] = `[]`;

exports[`loader should work and respect the 'resolve.byDependency.less' option: css 1`] = `
".b {
  color: #f00;
}
.b {
  color: #f00;
}
"
`;

exports[`loader should work and respect the 'resolve.byDependency.less' option: errors 1`] = `[]`;

exports[`loader should work and respect the 'resolve.byDependency.less' option: warnings 1`] = `[]`;

exports[`loader should work binop import: css 1`] = `
".not-real-nib {
  color: #000;
}
"
`;

exports[`loader should work binop import: errors 1`] = `[]`;

exports[`loader should work binop import: warnings 1`] = `[]`;

exports[`loader should work compress in "production" mode: css 1`] = `"body{font:12px Helvetica,Arial,sans-serif}a.button{-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}"`;

exports[`loader should work compress in "production" mode: errors 1`] = `[]`;

exports[`loader should work compress in "production" mode: warnings 1`] = `[]`;

exports[`loader should work indented import: css 1`] = `
"body {
  color: #f00;
}
.some-class body {
  font: 12px Helvetica, Arial, sans-serif;
}
.some-class a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
.webpack-import .not-real-nib {
  color: #000;
}
"
`;

exports[`loader should work indented import: errors 1`] = `[]`;

exports[`loader should work indented import: warnings 1`] = `[]`;

exports[`loader should work when stylusOptions is function: css 1`] = `
"body {
  width: 100%;
}
"
`;

exports[`loader should work when stylusOptions is function: errors 1`] = `[]`;

exports[`loader should work when stylusOptions is function: warnings 1`] = `[]`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme1): css 1`] = `
".load-me {
  color: #f00;
}
"
`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme1): errors 1`] = `[]`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme1): warnings 1`] = `[]`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme2): css 1`] = `
".load-me {
  color: #00f;
}
"
`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme2): errors 1`] = `[]`;

exports[`loader should work with a package with "styl" and "exports" fields and a custom condition (theme2): warnings 1`] = `[]`;

exports[`loader should work: css 1`] = `
"body {
  font: 12px Helvetica, Arial, sans-serif;
}
a.button {
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
}
"
`;

exports[`loader should work: errors 1`] = `[]`;

exports[`loader should work: warnings 1`] = `[]`;

exports[`loader shouldn't import css: css 1`] = `
"@import "css.css";
"
`;

exports[`loader shouldn't import css: errors 1`] = `[]`;

exports[`loader shouldn't import css: warnings 1`] = `[]`;

exports[`loader stylus can find modules in node_modules: css 1`] = `
".not-real-nib {
  color: #000;
}
"
`;

exports[`loader stylus can find modules in node_modules: errors 1`] = `[]`;

exports[`loader stylus can find modules in node_modules: warnings 1`] = `[]`;

exports[`loader with option, should not resolve urls relatively: css 1`] = `
".img {
  content: url("../img.png");
  content: url("../not-exist.png");
  background: url("deep-img.png");
  background: url("http://example.com/img.png");
  background: url("!!deep-img.png");
  background: url("file!deep-img.png");
  background: url("file?foo!deep-img.png");
}
"
`;

exports[`loader with option, should not resolve urls relatively: errors 1`] = `[]`;

exports[`loader with option, should not resolve urls relatively: warnings 1`] = `[]`;

exports[`loader with option, should resolve urls relatively with loader inline syntax: css 1`] = `
"@import 'deep/deep-urls-webpack';
"
`;

exports[`loader with option, should resolve urls relatively with loader inline syntax: errors 1`] = `
[
  "ModuleError: Module Error (from \`replaced original path\`):
Stylus resolver error: import loop has been found",
]
`;

exports[`loader with option, should resolve urls relatively with loader inline syntax: warnings 1`] = `[]`;

exports[`loader with paths, find deps and load like normal stylus: css 1`] = `
".other {
  font-family: serif;
}
"
`;

exports[`loader with paths, find deps and load like normal stylus: errors 1`] = `[]`;

exports[`loader with paths, find deps and load like normal stylus: warnings 1`] = `[]`;

exports[`loader with paths, find deps with spaces and load like normal stylus: css 1`] = `
".other-space {
  font-family: serif;
}
"
`;

exports[`loader with paths, find deps with spaces and load like normal stylus: errors 1`] = `[]`;

exports[`loader with paths, find deps with spaces and load like normal stylus: warnings 1`] = `[]`;
